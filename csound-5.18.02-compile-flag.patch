diff -rupN Csound5.18.02.old/Top/csound.c Csound5.18.02/Top/csound.c
--- Csound5.18.02.old/Top/csound.c	2012-10-31 14:14:13.000000000 +0100
+++ Csound5.18.02/Top/csound.c	2012-10-31 14:22:11.221291542 +0100
@@ -1636,6 +1636,10 @@ extern "C" {
   {
       int done;
       int returnValue;
+      /* WTB - Oct 15 2009: only perform if CS_STATE_COMP set. */
+      if (UNLIKELY((csound->engineState & CS_STATE_COMP) == 0)) {
+         return 1;
+      }
       /* setup jmp for return after an exit() */
       if ((returnValue = setjmp(csound->exitjmp))) {
 #ifndef MACOSX
@@ -1656,6 +1660,10 @@ extern "C" {
   {
       int done = 0;
       int returnValue;
+      /* WTB - Oct 15 2009: only perform if CS_STATE_COMP set. */
+      if (UNLIKELY((csound->engineState & CS_STATE_COMP) == 0)) {
+         return 1;
+      }
       /* setup jmp for return after an exit() */
       if ((returnValue = setjmp(csound->exitjmp))) {
 #ifndef MACOSX
@@ -1675,6 +1683,10 @@ extern "C" {
   {
       int returnValue;
       int done;
+      /* WTB - Oct 15 2009: only perform if CS_STATE_COMP set. */
+      if (UNLIKELY((csound->engineState & CS_STATE_COMP) == 0)) {
+         return 1;
+      }
       /* Setup jmp for return after an exit(). */
       if ((returnValue = setjmp(csound->exitjmp))) {
 #ifndef MACOSX
@@ -1700,6 +1712,10 @@ extern "C" {
       int done;
       int returnValue;
       csound->performState = 0;
+      /* WTB - Oct 15 2009: only perform if CS_STATE_COMP set. */
+      if (UNLIKELY((csound->engineState & CS_STATE_COMP) == 0)) {
+         return 1;
+      }
       /* setup jmp for return after an exit() */
       if ((returnValue = setjmp(csound->exitjmp))) {
 #ifndef MACOSX
diff -rupN Csound5.18.02.old/Top/main.c Csound5.18.02/Top/main.c
--- Csound5.18.02.old/Top/main.c	2012-08-31 15:40:34.000000000 +0200
+++ Csound5.18.02/Top/main.c	2012-10-31 14:25:11.786404930 +0100
@@ -106,7 +106,9 @@ PUBLIC int csoundCompile(CSOUND *csound,
     /* dbfs_init(csound, DFLT_DBFS); */
     csound->csRtClock = (RTCLOCK*) csound->Calloc(csound, sizeof(RTCLOCK));
     csoundInitTimerStruct(csound->csRtClock);
-    csound->engineState |= CS_STATE_COMP | CS_STATE_CLN;
+    /* WTB - Oct 15 2009: only set CS_STATE_CLN; CS_STATE_COMP set when retval=0. */
+    csound->engineState |= /*CS_STATE_COMP |*/ CS_STATE_CLN;
+
 
 #ifndef USE_DOUBLE
 #ifdef BETA
@@ -445,5 +447,12 @@ PUBLIC int csoundCompile(CSOUND *csound,
 #endif
 
 
-    return musmon(csound);
+    n = musmon(csound);
+
+    /* WTB - Oct 15 2009: CS_STATE_COMP set when retval=0. */
+    if (n == 0) {
+               csound->engineState |= CS_STATE_COMP;
+    }
+
+    return n;
 }
