diff -rupN Csound5.18.02.old/SConstruct Csound5.18.02/SConstruct
--- Csound5.18.02.old/SConstruct	2012-11-01 18:45:00.000000000 +0100
+++ Csound5.18.02/SConstruct	2012-11-02 15:26:22.372126656 +0100
@@ -1271,7 +1271,7 @@ if getPlatform() == 'darwin':
 #############################################################################
 
 csoundProgramEnvironment = commonEnvironment.Clone()
-csoundProgramEnvironment.Append(LINKFLAGS = libCsoundLinkFlags)
+csoundProgramEnvironment.Append(LINKFLAGS = libCsoundLinkFlags+Split(commonEnvironment['customSHLINKFLAGS']))
 csoundProgramEnvironment.Append(LIBS = libCsoundLibs)
 
 
@@ -1439,6 +1439,7 @@ else:
     else:
         print 'CONFIGURATION DECISION: Building Java wrapper to Csound C++ interface library.'
         javaWrapperEnvironment = csoundWrapperEnvironment.Clone()
+        javaWrapperEnvironment.Append(LINKFLAGS = Split(commonEnvironment['customSHLINKFLAGS']))
         if  getPlatform() == 'darwin': 
              javaWrapperEnvironment.Append(LINKFLAGS = ['-L.', '-l_csnd'])
 	else: javaWrapperEnvironment.Prepend(LIBS = ['csnd'])
@@ -1867,7 +1868,7 @@ else:
 if pulseaudioFound and (getPlatform() == 'linux' or getPlatform() == 'sunos'):
    print "CONFIGURATION DECISION: Building PulseAudio plugin"
    pulseaudioEnv = pluginEnvironment.Clone()
-   pulseaudioEnv.Append(LIBS = ['pulse-simple'])
+   pulseaudioEnv.Append(LIBS = ['pulse-simple', 'pulse'])
    makePlugin(pulseaudioEnv, 'rtpulse', ['InOut/rtpulse.c'])
 
 if getPlatform() == 'win32':
@@ -2215,22 +2216,22 @@ if (commonEnvironment['buildUtilities']
 
 executables.append(csoundProgramEnvironment.Program('scsort',
     ['util1/sortex/smain.c']))
- a = csoundProgramEnvironment.Program('cs-extract', ['util1/sortex/xmain.c'])
- executables.append(a)
- Depends(a, csoundLibrary)
+a = csoundProgramEnvironment.Program('cs-extract', ['util1/sortex/xmain.c'])
+executables.append(a)
+Depends(a, csoundLibrary)
 if compilerGNU():
-    a = commonEnvironment.Program('cs-launcher', ['util1/csd_util/cs.c'])
+    a = csoundProgramEnvironment.Program('cs-launcher', ['util1/csd_util/cs.c'])
     executables.append(a)
     Depends(a, csoundLibrary)
-    executables.append(commonEnvironment.Program('csb64enc',
+    executables.append(csoundProgramEnvironment.Program('csb64enc',
       ['util1/csd_util/base64.c', 'util1/csd_util/csb64enc.c']))
-    executables.append(commonEnvironment.Program('makecsd',
+    executables.append(csoundProgramEnvironment.Program('makecsd',
       ['util1/csd_util/base64.c', 'util1/csd_util/makecsd.c']))
-    executables.append(commonEnvironment.Program('cs-scot',
+    executables.append(csoundProgramEnvironment.Program('cs-scot',
       ['util1/scot/scot_main.c', 'util1/scot/scot.c']))
 #executables.append(csoundProgramEnvironment.Program('cscore',
 #    ['util1/cscore/cscore_main.c']))
-executables.append(commonEnvironment.Program('sdif2ad',
+executables.append(csoundProgramEnvironment.Program('sdif2ad',
     ['SDIF/sdif2adsyn.c', 'SDIF/sdif.c', 'SDIF/sdif-mem.c']))
 
 for i in executables:
@@ -2630,6 +2631,7 @@ if commonEnvironment['buildTclcsound'] =
         lib1 = 'tcl%s' % commonEnvironment['tclversion']
         lib2 = 'tk%s' % commonEnvironment['tclversion']
         csTclEnvironment.Append(LIBS = [lib1, lib2, 'dl', 'pthread'])
+	csTclEnvironment.Append(LINKFLAGS = Split(commonEnvironment['customSHLINKFLAGS']))
     elif getPlatform() == 'win32':
         lib1 = 'tcl%s' % commonEnvironment['tclversion']
         lib2 = 'tk%s' % commonEnvironment['tclversion']
